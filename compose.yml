services:
  migration:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["run", "db:migrate"]
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://user:password@db:5432/mm_product_db
    depends_on:
      db:
        condition: service_healthy
  

  mm_product_api:
    build:
      context: .
      dockerfile: Dockerfile
    command:
      - run
      - start:prod
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://user:password@db:5432/mm_product_db
    ports:
      - 3000:3000
    depends_on:
      migration:
        condition: service_completed_successfully

  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mm_product_db
    ports:
      - 5433:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mm_product_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data: {}
